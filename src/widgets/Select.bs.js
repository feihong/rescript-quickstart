// Generated by ReScript, PLEASE EDIT WITH CARE

import * as RR from "../utils/RR.bs.js";
import * as $$Array from "../utils/Array.bs.js";
import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as $$Option from "../utils/Option.bs.js";
import * as $$String from "rescript/lib/es6/string.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";

function Select$Item(Props) {
  var label = Props.label;
  return React.createElement("option", {
              value: label
            }, RR.s(label));
}

var Item = {
  make: Select$Item
};

function Select(Props) {
  var value = Props.value;
  var isEqual = Props.isEqual;
  var onChange = Props.onChange;
  var children = Props.children;
  var items = React.Children.toArray(children).map(function (prim) {
        return prim.props;
      });
  var label = $$Option.flatMap($$Array.getBy(items, (function (item) {
              var value$p = item.value;
              if (value$p !== undefined) {
                return Curry._2(isEqual, Caml_option.valFromOption(value$p), value);
              } else {
                return false;
              }
            })), (function (item) {
          return item.label;
        }));
  var tmp = {
    onChange: (function (evt) {
        var label = evt.target.value;
        var $$break = false;
        var i = 0;
        while(!$$break && i < items.length) {
          var item = $$Array.getExn(items, i);
          var match = item.label;
          var match$1 = item.value;
          if (match !== undefined && match$1 !== undefined) {
            var value$p = Caml_option.valFromOption(match$1);
            if ($$String.equal(match, label) && !Curry._2(isEqual, value$p, value)) {
              Curry._1(onChange, value$p);
              $$break = true;
            }
            
          }
          i = i + 1 | 0;
        };
        
      })
  };
  if (label !== undefined) {
    tmp.value = Caml_option.valFromOption(label);
  }
  return React.createElement("select", tmp, children);
}

var make = Select;

export {
  Item ,
  make ,
  
}
/* react Not a pure module */
