// Generated by ReScript, PLEASE EDIT WITH CARE

import * as H1 from "../widgets/H1.bs.js";
import * as RR from "../utils/RR.bs.js";
import * as $$Array from "../utils/Array.bs.js";
import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Button from "../widgets/Button.bs.js";
import * as $$Option from "../utils/Option.bs.js";
import * as Js_math from "rescript/lib/es6/js_math.js";
import * as Pervasives from "rescript/lib/es6/pervasives.js";

function getRandomHanzi(count) {
  return $$Array.makeBy(count, (function (_i) {
                  return String.fromCharCode(Js_math.random_int(19968, 40960));
                })).join("");
}

function getHanziLines(count) {
  return $$Array.makeBy(count, (function (i) {
                return getRandomHanzi(i + 1 | 0);
              }));
}

function HanziPyramid(Props) {
  var match = React.useState(function () {
        return String(8);
      });
  var setCount = match[1];
  var count = match[0];
  var match$1 = React.useState(function () {
        return getHanziLines(8);
      });
  var setLines = match$1[1];
  var generate = function (param) {
    return Curry._1(setLines, (function (param) {
                  return getHanziLines($$Option.getWithDefault(Pervasives.int_of_string_opt(count), 1));
                }));
  };
  React.useEffect((function () {
          generate(undefined);
          
        }), [count]);
  return React.createElement("div", {
              className: "flex flex-col items-center space-y-4"
            }, React.createElement(H1.make, {
                  children: RR.s("Hanzi pyramid")
                }), React.createElement("div", {
                  className: "space-x-2"
                }, React.createElement("input", {
                      style: {
                        width: "5em"
                      },
                      autoFocus: true,
                      type: "number",
                      value: count,
                      onKeyPress: (function (evt) {
                          if (evt.key === "Enter") {
                            return generate(undefined);
                          }
                          
                        }),
                      onChange: (function (evt) {
                          return Curry._1(setCount, (function (param) {
                                        return evt.target.value;
                                      }));
                        })
                    }), React.createElement(Button.make, {
                      onClick: (function (param) {
                          return generate(undefined);
                        }),
                      children: RR.s("Generate")
                    })), React.createElement("div", {
                  className: "text-center"
                }, $$Array.mapWithIndex(match$1[0], (function (i, line) {
                        return React.createElement("p", {
                                    key: String(i),
                                    className: "text-3xl"
                                  }, RR.s(line));
                      }))));
}

var make = HanziPyramid;

export {
  getRandomHanzi ,
  getHanziLines ,
  make ,
  
}
/* H1 Not a pure module */
